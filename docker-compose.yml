version: "3.9"

services:
  mongodb:
    image: mongo:7.0
    container_name: rental_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - rental_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rental_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - rental_network
    
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rental_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - rental_network
    command: ["npm", "run", "dev"]

networks:
  rental_network:
    driver: bridge

volumes:
  mongodb_data:
  frontend_node_modules:
